on:
  push:
    branches:
    - dev

name: CI/CD

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: terraform-setup
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.6
    - name: stage
      run: echo "STAGE=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: run
      run: |
        cd ./infrastructure/
        terraform fmt -check -diff -recursive -no-color
        terraform init -backend=true -get=true -reconfigure -upgrade
        terraform workspace select -or-create $STAGE
        terraform plan -no-color -refresh=true -var-file=./vars/$STAGE.tfvars
        terraform apply -no-color -auto-approve -var-file=./vars/$STAGE.tfvars
  code:
    runs-on: ubuntu-latest
    needs: infrastructure
    steps:
    - name: env
      uses: iamtheyammer/branch-env-vars@v1.2.1
      with:
        bevOverwrite: true
        S3: |
          dev:dev.usetempo.ai
    - name: checkout
      uses: actions/checkout@v3
    - name: set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: set up Node
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: configure
      run: |
        npm install
        CI=false npm run build
    - name: deploy
      run: |
        aws s3 sync --exact-timestamps out/ s3://$S3 --delete --acl private
